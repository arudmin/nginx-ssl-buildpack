#!/bin/bash

# Heroku standard way to log buildpack info to console
status() {
  echo "-----> $*"
}

set -e            # fail fast
set -o pipefail   # dont ignore exit codes when piping output

NGINX_VERSION=1.15.8
PCRE_VERSION=8.21
NGINX_RTMP_MODULE_VERSION=1.2.1

nginx_tarball_url=http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz
pcre_tarball_url=http://sourceforge.net/projects/pcre/files/pcre/${PCRE_VERSION}/pcre-${PCRE_VERSION}.tar.bz2/download
rtmp_tarball_url=https://github.com/arut/nginx-rtmp-module/archive/v${NGINX_RTMP_MODULE_VERSION}.tar.gz

status "This new NEW!"

root_directory=$(pwd)
# remote: -----> /tmp/buildpack20151124-166-1ka98k6
status "$root_directory"
ls_1=$(ls $root_directory)
ls_2=$(ls $root_directory/bin)
status "$ls_1"
status "$ls_2"

# change to the BUILD_DIR ($1)
##cd $1


temp_dir=$(mktemp -d /tmp/nginx.XXXXXXXXXX)
cd $temp_dir
echo "Temp dir: $temp_dir"


status "Downloading $nginx_tarball_url"
curl -L $nginx_tarball_url | tar xzv

status "Downloading $pcre_tarball_url"
(cd nginx-${NGINX_VERSION} && curl -L $pcre_tarball_url | tar xvj)

status "Downloading $rtmp_tarball_url"
(cd nginx-${NGINX_VERSION} && curl -L $rtmp_tarball_url | tar xzv)

status "$(pwd)"

# cd nginx-${NGINX_VERSION}

status "Compiling nginx"
status "/${temp_dir}/nginx-${NGINX_VERSION}/nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION}"
status "(ls /${temp_dir}/nginx-${NGINX_VERSION}/nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION})"

(
cd nginx-${NGINX_VERSION}
./configure \
  --with-pcre=pcre-${PCRE_VERSION} \
  --prefix=/app/nginx \
  --with-http_ssl_module \
  --with-http_stub_status_module
  --add-module=/${temp_dir}/nginx-${NGINX_VERSION}/nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION}
  --with-debug
)
status "Installing nginx"
make install --silent

ls_3=$(pwd)
ls_4=$(ls $ls_3)
status "$ls_3"
status "$ls_4"

status "nginx-buildpack: Installed nginx-${NGINX_VERSION} with RTMP module"

mkdir -p "$1/bin/"
#cp "$root_directory/bin/nginx-cedar-14" "$1/bin/nginx"
#nginx_version=$("$root_directory/bin/nginx-cedar-14" -V 2>&1 | head -1 | awk '{ print $NF }')
#cp -r "$root_directory/nginx-$NGINX_VERSION" "$1/bin/nginx"
#status "nginx-buildpack: Installed ${NGINX_VERSION} to app/bin"

cp "$root_directory/bin/start-nginx" "$1/bin/"
status "nginx-buildpack: Added start-nginx to app/bin"

mkdir -p "$1/config"
cp "$root_directory/config/mime.types" "$1/config/"
status "nginx-buildpack: Default mime.types copied to app/config/"

if [[ ! -f $1/config/nginx.conf.erb ]]; then
	cp config/nginx.conf.erb "$1/config/"
	status "nginx-buildpack: Default config copied to app/config."
else
	status "nginx-buildpack: Custom config found in app/config."
fi
exit 0
